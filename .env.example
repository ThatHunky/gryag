TELEGRAM_TOKEN=
GEMINI_API_KEY=
GEMINI_MODEL=gemini-2.5-flash
GEMINI_EMBED_MODEL=models/text-embedding-004
DB_PATH=./gryag.db
MAX_TURNS=50
CONTEXT_SUMMARY_THRESHOLD=30
USE_REDIS=false
REDIS_URL=redis://localhost:6379/0
ADMIN_USER_IDS=
RETENTION_DAYS=30
ENABLE_SEARCH_GROUNDING=false

# Media Handling
# Maximum number of media items (images/videos) to include in context history
# Gemma models: 32 max (set to 28 conservative)
# Gemini models: Higher limits (can increase to 50+)
GEMINI_MAX_MEDIA_ITEMS=28

# Weather API (OpenWeatherMap)
OPENWEATHER_API_KEY=
OPENWEATHER_BASE_URL=https://api.openweathermap.org/data/2.5

# Currency API (ExchangeRate-API) 
EXCHANGE_RATE_API_KEY=
EXCHANGE_RATE_BASE_URL=https://v6.exchangerate-api.com

# User Profiling
ENABLE_USER_PROFILING=true
USER_PROFILE_RETENTION_DAYS=365
MAX_FACTS_PER_USER=100
FACT_CONFIDENCE_THRESHOLD=0.7
FACT_EXTRACTION_ENABLED=true
PROFILE_SUMMARIZATION_INTERVAL_HOURS=24
MIN_MESSAGES_FOR_EXTRACTION=5

# Profile Summarization (Phase 2)
# Background task that generates summaries of user profiles
# Optimized for i5-6500: processes 1 profile at a time, runs at 3 AM
ENABLE_PROFILE_SUMMARIZATION=false
PROFILE_SUMMARIZATION_HOUR=3
PROFILE_SUMMARIZATION_BATCH_SIZE=30
MAX_PROFILES_PER_DAY=50

# Fact Extraction Configuration
# Uses Google Gemini API (rule-based patterns + optional Gemini fallback)
# - Fast regex patterns for common cases (instant, 70% coverage)
# - Gemini API fallback for complex cases (when rule-based finds <2 facts)
ENABLE_GEMINI_FACT_EXTRACTION=true

# Continuous Learning System (Phase 1+)
# Intelligent continuous monitoring that learns from all messages
ENABLE_CONTINUOUS_MONITORING=true
ENABLE_MESSAGE_FILTERING=false          # Phase 3: Start filtering low-value messages
ENABLE_ASYNC_PROCESSING=false           # Phase 3: Enable async fact extraction

# Conversation Window Settings
# Groups messages into windows for better context understanding
CONVERSATION_WINDOW_SIZE=8              # Messages per window (3-20)
CONVERSATION_WINDOW_TIMEOUT=180         # Seconds before window closes (60-600)
MAX_CONCURRENT_WINDOWS=100              # Max windows tracked simultaneously

# Event Queue Settings
# Async processing with priority queue and circuit breakers
MONITORING_WORKERS=3                    # Number of async workers (1-10)
MAX_QUEUE_SIZE=1000                     # Max queued events (100-10000)
ENABLE_CIRCUIT_BREAKER=true             # Fault tolerance
CIRCUIT_BREAKER_THRESHOLD=5             # Failures before opening circuit (3-20)
CIRCUIT_BREAKER_TIMEOUT=60              # Seconds before retry (30-300)

# Proactive Response Settings (Phase 4)
# Bot proactively joins conversations when it can help
ENABLE_PROACTIVE_RESPONSES=false        # Phase 4: Enable proactive engagement
PROACTIVE_CONFIDENCE_THRESHOLD=0.75     # Minimum confidence to respond (0.5-1.0)
PROACTIVE_COOLDOWN_SECONDS=300          # Min seconds between proactive responses

# System Health Monitoring
ENABLE_HEALTH_METRICS=true              # Track system health
HEALTH_CHECK_INTERVAL=300               # Seconds between health checks

# ═══════════════════════════════════════════════════════════════════════════════
# Universal Bot Configuration (Phase 1)
# Makes the bot configurable for different personalities, languages, and chats
# ═══════════════════════════════════════════════════════════════════════════════

# Bot Identity
# Display name used in responses and error messages
BOT_NAME=gryag

# Telegram username (without @), auto-detected from bot token if not set
# BOT_USERNAME=gryag_bot

# Comma-separated trigger words for bot activation (empty = use persona config)
# Examples: "гряг,gryag" or "bot,assistant,help"
BOT_TRIGGER_PATTERNS=

# Prefix for admin commands (e.g., /gryagban, /gryagreset)
# Set to bot name to keep commands consistent
COMMAND_PREFIX=gryag

# Personality Configuration
# Path to persona YAML file (empty = use default hardcoded persona)
# Examples: personas/ukrainian_gryag.yaml, personas/english_assistant.yaml
PERSONA_CONFIG=

# Path to response templates JSON (empty = use default hardcoded responses)
# Examples: response_templates/ukrainian.json, response_templates/english.json
RESPONSE_TEMPLATES=

# Primary language code (uk, en, etc.)
BOT_LANGUAGE=uk

# Allow strong language in responses
ENABLE_PROFANITY=true

# Chat Management
# Bot behavior mode: global (operate everywhere), whitelist (only allowed chats), blacklist (exclude blocked chats)
BOT_BEHAVIOR_MODE=global

# Comma-separated chat IDs for whitelist mode (use /gryagchatinfo to discover IDs)
# Example: ALLOWED_CHAT_IDS=-100123456789,-100987654321
ALLOWED_CHAT_IDS=

# Comma-separated chat IDs for blacklist mode
BLOCKED_CHAT_IDS=

# Comma-separated chat IDs where admin commands work (empty = all chats)
# Example: ADMIN_CHAT_IDS=-100123456789
ADMIN_CHAT_IDS=

# Only operate in groups, ignore private chats
IGNORE_PRIVATE_CHATS=false

# Feature Toggles
# Enable chat filtering based on BOT_BEHAVIOR_MODE and chat ID lists
ENABLE_CHAT_FILTERING=false

# Use configurable command names based on COMMAND_PREFIX
ENABLE_CUSTOM_COMMANDS=false

# Use template-based responses from RESPONSE_TEMPLATES
ENABLE_PERSONA_TEMPLATES=false

# ═══════════════════════════════════════════════════════════════════
# Logging Configuration
# ═══════════════════════════════════════════════════════════════════

# Directory for log files (created automatically)
LOG_DIR=./logs

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log format: text (human-readable) or json (structured)
LOG_FORMAT=text

# Auto-delete logs older than this many days
LOG_RETENTION_DAYS=7

# Maximum size per log file before rotation (bytes)
# Default: 10 MB = 10485760 bytes
LOG_MAX_BYTES=10485760

# Number of rotated backup files to keep
LOG_BACKUP_COUNT=5

# Enable console output (stdout/stderr)
ENABLE_CONSOLE_LOGGING=true

# Enable file logging
ENABLE_FILE_LOGGING=true


